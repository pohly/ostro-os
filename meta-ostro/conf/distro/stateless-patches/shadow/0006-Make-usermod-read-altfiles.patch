From c5bc6e9fabc1382cb4d428b77bb8cc517a233af4 Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 7 Apr 2015 16:02:09 -0700
Subject: [PATCH 6/6] Make usermod, read altfiles.
Organization: Intel Corporation (UK) Ltd. - Co. Reg. #1134945 - Pipers Way, Swindon SN3 1RJ

---
 lib/defines.h |  4 ++++
 lib/groupio.c | 57 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++-
 lib/groupio.h |  3 +++
 src/usermod.c | 10 ++++++++++
 4 files changed, 73 insertions(+), 1 deletion(-)

Index: shadow-4.2.1/lib/defines.h
===================================================================
--- shadow-4.2.1.orig/lib/defines.h
+++ shadow-4.2.1/lib/defines.h
@@ -306,6 +306,10 @@ char *strchr (), *strrchr (), *strtok ()
 #define GROUP_FILE "/etc/group"
 #endif
 
+#ifndef GROUP_ALTFILE
+#define GROUP_ALTFILE "/usr/share/defaults/etc/group"
+#endif
+
 #ifndef SHADOW_FILE
 #define SHADOW_FILE "/etc/shadow"
 #endif
Index: shadow-4.2.1/lib/groupio.c
===================================================================
--- shadow-4.2.1.orig/lib/groupio.c
+++ shadow-4.2.1/lib/groupio.c
@@ -142,6 +142,37 @@ static /*@owned@*/struct commonio_db gro
 	false			/* readonly */
 };
 
+static struct commonio_ops group_altops = {
+	group_dup,
+	group_free,
+	group_getname,
+	group_parse,
+	group_put,
+	fgetsx,
+	fputsx,
+	NULL,
+	NULL
+};
+
+static /*@owned@*/struct commonio_db group_altdb = {
+	GROUP_ALTFILE,		/* filename */
+	&group_altops,		/* ops */
+	NULL,			/* fp */
+#ifdef WITH_SELINUX
+	NULL,			/* scontext */
+#endif
+	0644,                   /* st_mode */
+	0,                      /* st_uid */
+	0,                      /* st_gid */
+	NULL,			/* head */
+	NULL,			/* tail */
+	NULL,			/* cursor */
+	false,			/* changed */
+	false,			/* isopen */
+	false,			/* locked */
+	false			/* readonly */
+};
+
 int gr_setdbname (const char *filename)
 {
 	return commonio_setname (&group_db, filename);
@@ -152,6 +183,11 @@ int gr_setdbname (const char *filename)
 	return group_db.filename;
 }
 
+/*@observer@*/const char *gralt_dbname (void)
+{
+	return group_altdb.filename;
+}
+
 int gr_lock (void)
 {
 	return commonio_lock (&group_db);
@@ -162,11 +198,21 @@ int gr_open (int mode)
 	return commonio_open (&group_db, mode);
 }
 
+int gralt_open (int mode)
+{
+	return commonio_open (&group_altdb, mode);
+}
+
 /*@observer@*/ /*@null@*/const struct group *gr_locate (const char *name)
 {
 	return commonio_locate (&group_db, name);
 }
 
+/*@observer@*/ /*@null@*/const struct group *gralt_locate (const char *name)
+{
+	return commonio_locate (&group_altdb, name);
+}
+
 /*@observer@*/ /*@null@*/const struct group *gr_locate_gid (gid_t gid)
 {
 	const struct group *grp;
@@ -204,6 +250,11 @@ int gr_close (void)
 	return commonio_close (&group_db);
 }
 
+int gralt_close (void)
+{
+	return commonio_close (&group_altdb);
+}
+
 int gr_unlock (void)
 {
 	return commonio_unlock (&group_db);
Index: shadow-4.2.1/lib/groupio.h
===================================================================
--- shadow-4.2.1.orig/lib/groupio.h
+++ shadow-4.2.1/lib/groupio.h
@@ -39,13 +39,17 @@
 #include <grp.h>
 
 extern int gr_close (void);
+extern int gralt_close (void);
 extern /*@observer@*/ /*@null@*/const struct group *gr_locate (const char *name);
+extern /*@observer@*/ /*@null@*/const struct group *gralt_locate (const char *name);
 extern /*@observer@*/ /*@null@*/const struct group *gr_locate_gid (gid_t gid);
 extern int gr_lock (void);
 extern int gr_setdbname (const char *filename);
 extern /*@observer@*/const char *gr_dbname (void);
+extern /*@observer@*/const char *gralt_dbname (void);
 extern /*@observer@*/ /*@null@*/const struct group *gr_next (void);
 extern int gr_open (int mode);
+extern int gralt_open (int mode);
 extern int gr_remove (const char *name);
 extern int gr_rewind (void);
 extern int gr_unlock (void);
Index: shadow-4.2.1/src/usermod.c
===================================================================
--- shadow-4.2.1.orig/src/usermod.c
+++ shadow-4.2.1/src/usermod.c
@@ -721,6 +721,19 @@ static void update_group (void)
 
 	changed = false;
 
+	char **ug_iter = NULL;
+
+	/* Load missing groups from altfiles */
+	for (ug_iter = user_groups; ug_iter && *ug_iter; ug_iter++) {
+		if (gr_locate(*ug_iter) == NULL) {
+			ngrp = gralt_locate(*ug_iter);
+			if (NULL != ngrp) {
+				gr_update (ngrp);
+			}
+		}
+	}
+	gr_rewind();
+
 	/*
 	 * Scan through the entire group file looking for the groups that
 	 * the user is a member of.
@@ -1413,6 +1426,11 @@ static void close_files (void)
 			         gr_dbname ()));
 			fail_exit (E_GRP_UPDATE);
 		}
+		if (gralt_close () == 0) {
+			fprintf (stderr,
+			         _("%s: failure while writing changes to %s\n"),
+			         Prog, gralt_dbname ());
+		}
 #ifdef SHADOWGRP
 		if (is_shadow_grp) {
 			if (sgr_close () == 0) {
@@ -1562,6 +1580,11 @@ static void open_files (void)
 			fail_exit (E_GRP_UPDATE);
 		}
 		gr_locked = true;
+		if (gralt_open (O_RDONLY) == 0) {
+			fprintf (stderr,
+			         _("%s: cannot open %s\n"),
+			         Prog, gralt_dbname ());
+		}
 		if (gr_open (O_CREAT | O_RDWR) == 0) {
 			fprintf (stderr,
 			         _("%s: cannot open %s\n"),
